library(tidyverse)
library(plm)
library(dplyr)

hogar24 <- read_delim("C:/Users/salamatematicas/Desktop/Nov_24/CSV/generales.CSV")
fuerza24 <- read_delim("C:/Users/salamatematicas/Desktop/Nov_24/CSV/fuerza.CSV")

hogar23 <- read_delim("C:/Users/salamatematicas/Desktop/Nov_23/CSV/generales.CSV")
fuerza23<- read_delim("C:/Users/salamatematicas/Desktop/Nov_23/CSV/fuerza.CSV")

hogar22 <- read_delim("C:/Users/salamatematicas/Desktop/Nov_22/CSV/generales.CSV")
fuerza22<- read_delim("C:/Users/salamatematicas/Desktop/Nov_22/CSV/fuerza.CSV")

#2024
hogar24<- hogar24 |>select(c("PER", "DIRECTORIO", "SECUENCIA_P", "ORDEN", "P3271", "CLASE",
                             "P6040", "P3042", "P6070")) |>
  rename(year = PER,
         id_vivienda = DIRECTORIO,
         id_hogar_viv = SECUENCIA_P,
         id_ind_hogar_viv = ORDEN,
         sexo = P3271,
         rural_urbano = CLASE,
         edad = P6040,
         educ = P3042,
         estado_civil = P6070)
hogar24 <- hogar24 |>
  mutate(sexo = ifelse(sexo == 1, "M" , "F"),
         rural_urbano = ifelse(rural_urbano == 1, "Ur", "Ru"),
         educ = case_when(
           educ == 1 ~ "ninguno",
           educ == 2 ~ "preescolar",
           educ == 3 ~ "bas_primaria",
           educ == 4 ~ "bas_sec",
           educ == 5 ~ "media_acad",
           educ == 6 ~ "media_tec",
           educ == 7 ~ "normalista",
           educ == 8 ~ "tec_prof",
           educ == 9 ~ "tecnolog",
           educ == 10 ~ "univ",
           educ == 11 ~ "especi",
           educ == 12 ~ "maestria",
           educ == 13 ~ "phd",
           TRUE ~ NA),
         estado_civil = case_when(
           estado_civil == 6 ~ "soltero",
           estado_civil == 5 ~ "viudo",
           estado_civil == 4 ~ "separado",
           estado_civil == 3 ~ "casado",
           estado_civil == 2 ~ "libre>2",
           estado_civil == 1 ~ "libre<2",
           TRUE ~ NA))


#fuerza de trabajo 
fuerza24<- fuerza24 |>select(c("DIRECTORIO", "SECUENCIA_P", "ORDEN", "FT")) |>
  rename(id_vivienda = DIRECTORIO,
         id_hogar_viv = SECUENCIA_P,
         id_ind_hogar_viv = ORDEN,
         fuerza_tra = FT
  ) 
fuerza24<- fuerza24 |>
  mutate(fuerza_tra = ifelse(is.na(fuerza_tra), 0, 1))

data_fusion_2024 = merge(hogar24, fuerza24, by = c("id_vivienda", "id_hogar_viv",
                                                   "id_ind_hogar_viv"), all = TRUE)

#2023

hogar23 <- hogar23 |>select(c("PER", "DIRECTORIO", "SECUENCIA_P", "ORDEN", "P3271", "CLASE",
                              "P6040", "P3042", "P6070")) |>
  rename(year = PER,
         id_vivienda = DIRECTORIO,
         id_hogar_viv = SECUENCIA_P,
         id_ind_hogar_viv = ORDEN,
         sexo = P3271,
         rural_urbano = CLASE,
         edad = P6040,
         educ = P3042,
         estado_civil = P6070)
hogar23 <- hogar23 |>
  mutate(sexo = ifelse(sexo == 1, "M" , "F"),
         rural_urbano = ifelse(rural_urbano == 1, "Ur", "Ru"),
         educ = case_when(
           educ == 1 ~ "ninguno",
           educ == 2 ~ "preescolar",
           educ == 3 ~ "bas_primaria",
           educ == 4 ~ "bas_sec",
           educ == 5 ~ "media_acad",
           educ == 6 ~ "media_tec",
           educ == 7 ~ "normalista",
           educ == 8 ~ "tec_prof",
           educ == 9 ~ "tecnolog",
           educ == 10 ~ "univ",
           educ == 11 ~ "especi",
           educ == 12 ~ "maestria",
           educ == 13 ~ "phd",
           TRUE ~ NA),
         estado_civil = case_when(
           estado_civil == 6 ~ "soltero",
           estado_civil == 5 ~ "viudo",
           estado_civil == 4 ~ "separado",
           estado_civil == 3 ~ "casado",
           estado_civil == 2 ~ "libre>2",
           estado_civil == 1 ~ "libre<2",
           TRUE ~ NA))

#fuerza de trabajo 
fuerza23<- fuerza23 |>select(c("DIRECTORIO", "SECUENCIA_P", "ORDEN", "FT")) |>
  rename(id_vivienda = DIRECTORIO,
         id_hogar_viv = SECUENCIA_P,
         id_ind_hogar_viv = ORDEN,
         fuerza_tra = FT ) 
fuerza23 <- fuerza23 |>
  mutate(fuerza_tra = ifelse(is.na(fuerza_tra), 0, 1))

data_fusion_2023 = merge(hogar23, fuerza23, by = c("id_vivienda", "id_hogar_viv",
                                                   "id_ind_hogar_viv"), all = TRUE)
#2022

hogar22 <- hogar22 |>select(c("PER", "DIRECTORIO", "SECUENCIA_P", "ORDEN", "P3271", "CLASE",
                              "P6040", "P3042", "P6070")) |>
  rename(year = PER,
         id_vivienda = DIRECTORIO,
         id_hogar_viv = SECUENCIA_P,
         id_ind_hogar_viv = ORDEN,
         sexo = P3271,
         rural_urbano = CLASE,
         edad = P6040,
         educ = P3042,
         estado_civil = P6070)
hogar22 <- hogar22 |>
  mutate(sexo = ifelse(sexo == 1, "M" , "F"),
         rural_urbano = ifelse(rural_urbano == 1, "Ur", "Ru"),
         educ = case_when(
           educ == 1 ~ "ninguno",
           educ == 2 ~ "preescolar",
           educ == 3 ~ "bas_primaria",
           educ == 4 ~ "bas_sec",
           educ == 5 ~ "media_acad",
           educ == 6 ~ "media_tec",
           educ == 7 ~ "normalista",
           educ == 8 ~ "tec_prof",
           educ == 9 ~ "tecnolog",
           educ == 10 ~ "univ",
           educ == 11 ~ "especi",
           educ == 12 ~ "maestria",
           educ == 13 ~ "phd",
           TRUE ~ NA),
         estado_civil = case_when(
           estado_civil == 6 ~ "soltero",
           estado_civil == 5 ~ "viudo",
           estado_civil == 4 ~ "separado",
           estado_civil == 3 ~ "casado",
           estado_civil == 2 ~ "libre>2",
           estado_civil == 1 ~ "libre<2",
           TRUE ~ NA))


#fuerza de trabajo 
fuerza22<- fuerza22 |>select(c("DIRECTORIO", "SECUENCIA_P", "ORDEN", "FT")) |>
  rename(id_vivienda = DIRECTORIO,
         id_hogar_viv = SECUENCIA_P,
         id_ind_hogar_viv = ORDEN,
         fuerza_tra = FT ) 
fuerza22 <- fuerza22 |>
  mutate(fuerza_tra = ifelse(is.na(fuerza_tra), 0, 1))

data_fusion_2022 = merge(hogar22, fuerza22, by = c("id_vivienda", "id_hogar_viv",
                                                   "id_ind_hogar_viv"), all = TRUE)


#AH0RA AGRUPAR LOS 3 DATASETS

data_set_final <- bind_rows(data_fusion_2022, data_fusion_2023, data_fusion_2024)
sum(is.na(data_set_final))
data_set_final = data_set_final %>% drop_na()
data_set_final <- data_set_final %>%
  mutate(universidad = ifelse(educ == "univ", 1, 0))

#REGRESIONES

reg_1 = lm(fuerza_tra ~ factor(year) + factor(sexo) + edad + I(edad^2), data = data_set_final)
summary(reg_1)
library(fastDummies)
t <- dummy_cols(data_set_final, select_columns = c("educ", "sexo", "rural_urbano", "fuerza_tra",
                                                   "estado_civil"), remove_first_dummy = TRUE, remove_selected_columns = TRUE)

reg_univ = glm(fuerza_tra ~ universidad + factor(year) + factor(sexo) + edad + I(edad^2), 
               data = data_set_final, family = binomial)
summary(reg_univ)

# Modelo de probabilidad lineal (LPM)
reg_lpm_simple = lm(fuerza_tra ~ universidad + factor(year) + factor(sexo) + edad + I(edad^2), 
                    data = data_set_final)
summary(reg_lpm_simple)

# Modelo logit
reg_logit_simple = glm(fuerza_tra ~ universidad + factor(year) + factor(sexo) + edad + I(edad^2), 
                       data = data_set_final, family = binomial)
summary(reg_logit_simple)

# Comparar resultados
library(modelsummary)
modelsummary(list("LPM" = reg_lpm_simple, "Logit" = reg_logit_simple), 
             stars = TRUE, output = "markdown")
reg_univ_interacciones = lm(fuerza_tra ~ universidad * factor(year) + 
                                     universidad * factor(sexo) + 
                                     universidad * factor(rural_urbano) + 
                                     edad + I(edad^2), 
                                   data = data_set_final)
summary(reg_univ_interacciones)
resultados_simple <- tidy(reg_lpm_simple)
resultados_interaccion <- tidy(reg_univ_interacciones)
tabla_comparacion <- bind_rows(reg_lpm_simple, reg_univ_interacciones)

# Verificar si los modelos tienen resultados
if (is.null(reg_univ_interacciones) || is.null(reg_lpm_simple)) {
  stop("Uno o ambos modelos no están definidos correctamente.")
}

# Revisar si los coeficientes contienen NA
if (any(is.na(coef(reg_univ_interacciones))) || any(is.na(coef(reg_lpm_simple)))) {
  stop("Uno o ambos modelos contienen coeficientes NA.")
}
stargazer(reg_univ_interacciones, reg_lpm_simple, type = "text")
library(stargazer)
stargazer(reg_univ_interacciones, reg_lpm_simple, type = "text")
print(names(coef(reg_univ_interacciones)))
print(names(coef(reg_lpm_simple)))
covariate.labels = c("universidad", "año2023", "año2024", "sexoM", "rural_urbano", "edad", "edad_cuadrado",
                     "universidad:año2023", "universidad:año2024", "universidad:sexoM", "universidad:rural_urbano")
stargazer(reg_univ_interacciones, reg_lpm_simple, 
          type = "text",
          title = "Comparación de Regresiones",
          column.labels = c("Modelo Interacciones", "Modelo Simple"),
          omit.stat = c("f", "ser"),
          digits = 4,
          max.length = 30)  # Limita el tamaño de las celdas
